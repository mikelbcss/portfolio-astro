---
import TimelineItem from './TimelineItem.astro';
interface Experience {
    title: string;
    dateStart: string;
    dateEnd: string;
    description: string[];
}

interface Props {
    experience: Experience[];
    step?: any | number;
    class?: String;
}

const { experience, step = -1, class: className } = Astro.props;

let currentStep: number = step;
let activeStepsHeight: number = 0;
if (step === -1) {
    currentStep = 0;
}
activeStepsHeight = ((currentStep + experience.length) / experience.length) * 100;
---

<script lang="ts" is:inline>
    window.onload = function () {
        window.setTimeout(() => {
            const portfolioTimeline = document.querySelector('.portfolio-timeline');
            portfolioTimeline.classList.add('portfolio-timeline--loaded');
            console.log(portfolioTimeline);
        }, 500);
    };
</script>
<ol
    class=`portfolio-timeline ${className}`
    style=`--active-step-height:${activeStepsHeight}; --steps:${experience.length}`
    role="list"
>
    {
        experience.map((item, index) => {
            let type = 'active';
            if (index === currentStep) {
                type = 'current';
            }
            if (index < currentStep) {
                type = 'disabled';
            }
            return (
                <li class="portfolio-timeline__item" role="listitem">
                    <TimelineItem experience={item} type={type} />
                </li>
            );
        })
    }
</ol>
<style lang="sass">
    .portfolio-timeline
        height: 100%
        position: relative
        display: flex
        flex-direction: column
        padding-top: 2em

        &::before,
        &::after
            bottom: 0
            position: absolute
            content: ''
            width: 4px
            border-radius: 20px

        &::before
            height: 100%
            background: grey

        &::after
            height: var(--active-height, 0)
            transition: height 1s ease-out
            background: #d822ff

            @media (prefers-reduced-motion: reduce)
                &
                    transition: unset

        &--loaded
            #{--active-height}: calc(var(--active-step-height) * 1%)

        &__item
            height: max-content

        :not(:first-child)
            margin-top: 2.5em
</style>
